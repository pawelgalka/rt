--------------------------------------------------------
--  This file was automatically generated by Ocarina  --
--  Do NOT hand-modify this file, as your             --
--  changes will be lost when you re-run Ocarina      --
--------------------------------------------------------
pragma Style_Checks
 ("NM32766");

with PolyORB_HI_Generated.Activity;
use PolyORB_HI_Generated.Activity;
with PolyORB_HI_Generated.Types;
with PolyORB_HI.Utils;
with PolyORB_HI_Generated.Subprograms;

package body PolyORB_HI_Generated.Job is

  --  Periodic task : video_captor_t

  --  Periodic task : video_sender_t

  --------------------------------------------
  -- surveillance_system_video_captor_t_Job -- 
  --------------------------------------------

  procedure surveillance_system_video_captor_t_Job
   (Result : out PolyORB_HI.Errors.Error_Kind)
  is
    camera1_capture_V : PolyORB_HI_Generated.Types.camera_image;
    camera1_capture_I : surveillance_system_video_captor_impl_Interface;
    camera1_capture_C : constant Standard.Integer :=
     PolyORB_HI_Generated.Activity.Get_Count
       (PolyORB_HI.Utils.Get_Task_Id,
        surveillance_system_video_captor_impl_Port_Type'
         (camera1_capture));
    camera2_capture_V : PolyORB_HI_Generated.Types.camera_image;
    camera2_capture_I : surveillance_system_video_captor_impl_Interface;
    camera2_capture_C : constant Standard.Integer :=
     PolyORB_HI_Generated.Activity.Get_Count
       (PolyORB_HI.Utils.Get_Task_Id,
        surveillance_system_video_captor_impl_Port_Type'
         (camera2_capture));
    camera3_capture_V : PolyORB_HI_Generated.Types.camera_image;
    camera3_capture_I : surveillance_system_video_captor_impl_Interface;
    camera3_capture_C : constant Standard.Integer :=
     PolyORB_HI_Generated.Activity.Get_Count
       (PolyORB_HI.Utils.Get_Task_Id,
        surveillance_system_video_captor_impl_Port_Type'
         (camera3_capture));
    handler_Status : PolyORB_HI_Generated.Subprograms.event_handlers_video_captor_handler_Status;
    Error_Ü : PolyORB_HI.Errors.Error_Kind;
    use type PolyORB_HI.Errors.Error_Kind;
  begin
    --  Get the IN port values
    if (camera1_capture_C
      /= -1)
    then
      PolyORB_HI_Generated.Activity.Get_Value
       (PolyORB_HI.Utils.Get_Task_Id,
        camera1_capture,
        camera1_capture_I);
      camera1_capture_V :=
       camera1_capture_I.camera1_capture_DATA;
    else
      camera1_capture_V :=
       PolyORB_HI_Generated.Types.camera_image_Default_Value;
    end if;
    if (camera2_capture_C
      /= -1)
    then
      PolyORB_HI_Generated.Activity.Get_Value
       (PolyORB_HI.Utils.Get_Task_Id,
        camera2_capture,
        camera2_capture_I);
      camera2_capture_V :=
       camera2_capture_I.camera2_capture_DATA;
    else
      camera2_capture_V :=
       PolyORB_HI_Generated.Types.camera_image_Default_Value;
    end if;
    if (camera3_capture_C
      /= -1)
    then
      PolyORB_HI_Generated.Activity.Get_Value
       (PolyORB_HI.Utils.Get_Task_Id,
        camera3_capture,
        camera3_capture_I);
      camera3_capture_V :=
       camera3_capture_I.camera3_capture_DATA;
    else
      camera3_capture_V :=
       PolyORB_HI_Generated.Types.camera_image_Default_Value;
    end if;
    --  Dequeue the IN port values
    PolyORB_HI_Generated.Activity.Next_Value
     (PolyORB_HI.Utils.Get_Task_Id,
      surveillance_system_video_captor_impl_Port_Type'
       (start));
    --  Call implementation
    PolyORB_HI_Generated.Subprograms.event_handlers_video_captor_handler
     (det1 => camera1_capture_V,
      det2 => camera2_capture_V,
      det3 => camera3_capture_V,
      Status => handler_Status);
    if (PolyORB_HI_Generated.Subprograms.Get_Count
     (handler_Status,
      PolyORB_HI_Generated.Subprograms.event_handlers_video_captor_handler_Port_Type'
       (PolyORB_HI_Generated.Subprograms.result))
      >= 1)
    then
      PolyORB_HI_Generated.Activity.Put_Value
       (PolyORB_HI_Generated.Deployment.video_video_captor_t_K,
        PolyORB_HI_Generated.Activity.surveillance_system_video_captor_impl_Interface'
         (Port => output_converted,
          output_converted_DATA => PolyORB_HI_Generated.Subprograms.Get_Value
           (handler_Status,
            PolyORB_HI_Generated.Subprograms.event_handlers_video_captor_handler_Port_Type'
             (PolyORB_HI_Generated.Subprograms.result)).result_DATA));
    end if;
    --  Send the call sequence OUT port values
    Error_Ü :=
     PolyORB_HI_Generated.Activity.Send_Output
       (PolyORB_HI.Utils.Get_Task_Id,
        surveillance_system_video_captor_impl_Port_Type'
         (output_converted));
    --  Return error code
    Result :=
     Error_Ü;
  end surveillance_system_video_captor_t_Job;

  --------------------------------------------
  -- surveillance_system_video_sender_t_Job -- 
  --------------------------------------------

  procedure surveillance_system_video_sender_t_Job
   (Result : out PolyORB_HI.Errors.Error_Kind)
  is
    message_V : PolyORB_HI_Generated.Types.captor_data;
    message_I : surveillance_system_video_sender_impl_Interface;
    message_C : constant Standard.Integer :=
     PolyORB_HI_Generated.Activity.Get_Count
       (PolyORB_HI.Utils.Get_Task_Id,
        surveillance_system_video_sender_impl_Port_Type'
         (message));
    Error_Ü : constant PolyORB_HI.Errors.Error_Kind :=
     PolyORB_HI.Errors.Error_None;
    use type PolyORB_HI.Errors.Error_Kind;
  begin
    --  Get the IN port values
    if (message_C
      /= -1)
    then
      PolyORB_HI_Generated.Activity.Get_Value
       (PolyORB_HI.Utils.Get_Task_Id,
        message,
        message_I);
      message_V :=
       message_I.message_DATA;
    else
      message_V :=
       PolyORB_HI_Generated.Types.captor_data_Default_Value;
    end if;
    --  Dequeue the IN port values
    PolyORB_HI_Generated.Activity.Next_Value
     (PolyORB_HI.Utils.Get_Task_Id,
      surveillance_system_video_sender_impl_Port_Type'
       (message));
    --  Call implementation
    PolyORB_HI_Generated.Subprograms.event_handlers_video_sender_handler;
    --  Return error code
    Result :=
     Error_Ü;
  end surveillance_system_video_sender_t_Job;

end PolyORB_HI_Generated.Job;
