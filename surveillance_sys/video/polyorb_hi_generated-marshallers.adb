--------------------------------------------------------
--  This file was automatically generated by Ocarina  --
--  Do NOT hand-modify this file, as your             --
--  changes will be lost when you re-run Ocarina      --
--------------------------------------------------------
pragma Style_Checks
 ("NM32766");

with PolyORB_HI_Generated;
with PolyORB_HI.Marshallers_G;
pragma Elaborate_All (PolyORB_HI.Marshallers_G);

package body PolyORB_HI_Generated.Marshallers is

  --  Marshallers for interface type of thread video_captor.impl

  --------------
  -- Marshall -- 
  --------------

  procedure Marshall
   (Data : PolyORB_HI_Generated.Activity.surveillance_system_video_captor_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    use PolyORB_HI_Generated.Activity;
  begin
    if (Data.Port
      = PolyORB_HI_Generated.Activity.output_converted)
    then
      PolyORB_HI_Generated.Marshallers.Marshall
       (Data.output_converted_DATA,
        Message);
    end if;
  end Marshall;

  ----------------
  -- Unmarshall -- 
  ----------------

  procedure Unmarshall
   (Port : PolyORB_HI_Generated.Activity.surveillance_system_video_captor_impl_Port_Type;
    Data : out PolyORB_HI_Generated.Activity.surveillance_system_video_captor_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    camera1_capture_DATA : PolyORB_HI_Generated.Types.camera_image;
    camera2_capture_DATA : PolyORB_HI_Generated.Types.camera_image;
    camera3_capture_DATA : PolyORB_HI_Generated.Types.camera_image;
    use PolyORB_HI_Generated.Activity;
  begin
    if (Port
      = PolyORB_HI_Generated.Activity.camera1_capture)
    then
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (camera1_capture_DATA,
        Message);
      Data :=
       PolyORB_HI_Generated.Activity.surveillance_system_video_captor_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.camera1_capture,
          camera1_capture_DATA => camera1_capture_DATA);
    elsif (Port
      = PolyORB_HI_Generated.Activity.camera2_capture)
    then
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (camera2_capture_DATA,
        Message);
      Data :=
       PolyORB_HI_Generated.Activity.surveillance_system_video_captor_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.camera2_capture,
          camera2_capture_DATA => camera2_capture_DATA);
    elsif (Port
      = PolyORB_HI_Generated.Activity.camera3_capture)
    then
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (camera3_capture_DATA,
        Message);
      Data :=
       PolyORB_HI_Generated.Activity.surveillance_system_video_captor_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.camera3_capture,
          camera3_capture_DATA => camera3_capture_DATA);
    end if;
  end Unmarshall;

  --  Marshallers for DATA type camera_image

  package camera_image_Marshallers is
   new PolyORB_HI.Marshallers_G
     (PolyORB_HI_Generated.Types.camera_image);

  procedure Marshall
   (Data : PolyORB_HI_Generated.Types.camera_image;
    Message : in out PolyORB_HI.Messages.Message_Type)
   renames camera_image_Marshallers.Marshall;

  procedure Unmarshall
   (Data : out PolyORB_HI_Generated.Types.camera_image;
    Message : in out PolyORB_HI.Messages.Message_Type)
   renames camera_image_Marshallers.Unmarshall;

  --  Marshallers for DATA type captor_data

  package captor_data_Marshallers is
   new PolyORB_HI.Marshallers_G
     (PolyORB_HI_Generated.Types.captor_data);

  procedure Marshall
   (Data : PolyORB_HI_Generated.Types.captor_data;
    Message : in out PolyORB_HI.Messages.Message_Type)
   renames captor_data_Marshallers.Marshall;

  procedure Unmarshall
   (Data : out PolyORB_HI_Generated.Types.captor_data;
    Message : in out PolyORB_HI.Messages.Message_Type)
   renames captor_data_Marshallers.Unmarshall;

  --  Marshallers for interface type of thread video_sender.impl

  --------------
  -- Marshall -- 
  --------------

  procedure Marshall
   (Data : PolyORB_HI_Generated.Activity.surveillance_system_video_sender_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    pragma Unreferenced
     (Message);
    pragma Unreferenced
     (Data);
  begin
    null;
  end Marshall;

  ----------------
  -- Unmarshall -- 
  ----------------

  procedure Unmarshall
   (Port : PolyORB_HI_Generated.Activity.surveillance_system_video_sender_impl_Port_Type;
    Data : out PolyORB_HI_Generated.Activity.surveillance_system_video_sender_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    message_DATA : PolyORB_HI_Generated.Types.captor_data;
    use PolyORB_HI_Generated.Activity;
  begin
    if (Port
      = PolyORB_HI_Generated.Activity.message)
    then
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (message_DATA,
        Message);
      Data :=
       PolyORB_HI_Generated.Activity.surveillance_system_video_sender_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.message,
          message_DATA => message_DATA);
    end if;
  end Unmarshall;

end PolyORB_HI_Generated.Marshallers;
